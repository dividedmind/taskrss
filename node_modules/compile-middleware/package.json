{
  "name": "compile-middleware",
  "version": "0.2.8",
  "description": "Generic Express.js/Connect middleware handling runtime compilization tasks",
  "keywords": [
    "middleware",
    "express",
    "connect",
    "compile",
    "less",
    "jade",
    "jade-browser"
  ],
  "author": {
    "name": "Shinohane",
    "email": "imandry.c@gmail.com",
    "url": "http://shinohane.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/shinohane/compile-middleware.git"
  },
  "dependencies": {
    "gaze": "*"
  },
  "devDependencies": {
    "mocha": "*",
    "supertest": "*",
    "express": "*",
    "should": "*"
  },
  "main": "index.js",
  "scripts": {
    "test": "mocha -R spec"
  },
  "license": "Apache License v2.0",
  "readme": "Compile\n=======\n\nGeneric Express.js/Connect middleware handling runtime compilization tasks.\n\nFeature\n-------\n\n* Compile source file on requested\n\n* Cache the compiled data for next request\n\n* Watch for source file changes\n\n  Once the source file is changed, cache is invalidated.\n\n* Dependency Supplement interface\n\n  Add extra dependency files to watch\n\n* Support JSONP request\n\n  Support request with `GET /api?callback=?`\n\nUsage\n-----\n\n```javascript\nvar compile = require('compile-middleware');\nvar midware = {\n  less: compile({\n    filename  : function (req) {            // Source filename resolve\n                  // Function obtaining filename \n                },\n    src       : '/path/to/source',          // Path to source file\n    render    : function (source_path, cb, depend) {\n                  // Function render file \n                },\n  }),\n  jade: compile({\n    filename  : /(?:\\/runtime\\/)(.*)\\.js/i, // Capture group 1 will be used\n    src_ext   : '.jade',                    // Optional, Default ''\n    src       : '/path/to/source',\n    render    : function (source_path, cb) {\n                  // Function rendering file\n                },\n    headers   : {                           // Optional, HTTP Headers\n                  'Cache-Control': 'public, max-age=86400',\n                  'Content-Type': 'text/javascript' \n                }\n  })\n};\n\napp.use(midware.less);\napp.use(midware.jade);\n```\n\nWhen render function issue an `ENOENT` error. The middleware will invoke the\n`next()` function for other middleware to execute. \n\n_Thus, put this middleware before `express.static` middleware is recommended \npractice._\n\nRender Function Arguments: \n\n* **source_path**\n\n  path to the file to be rendered, file path be made from `src`, \n  `filename` expression and `src_ext` parameter.\n\n* **cb**\n\n  callback function, invoke `cb(err)` on error, `cb(null, <data>)` on\n  success\n\n* **depend** (Optional)\n\n  You can add extra dependency by calling `depend(\"/path/to/extra/depend\")`\n  or `depend([\"list/of\", \"extra/depend\", \"files\"])`\n\n  *The change on depended file will also invalidate the compiled cache*\n\nEither a function or Regular Expression is accepted as filename parameter.\nWhen using RegEx, the first capture group will be used as the name of source\nfile. A suffix to filename can be defined by `src_ext`.\n\n**WARNING** No not add a `g` flag to the RegExp, that will broke the \nfilename extraction procedure. It's an\n[V8 Issue](https://code.google.com/p/v8/issues/detail?id=778)\n\nRelated Works\n-------------\n\n* [Compile-Middleware for Jade-Runtime](http://github.com/shinohane/compile-mw-jade-runtime)\n\n* [Compile-Middleware for LESS](http://github.com/shinohane/compile-mw-less)\n\nLicense\n-------\n\nCopyright 2013 Shinohane&lt;imandry.c@gmail.com&gt;\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and \nlimitations under the License.\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/shinohane/compile-middleware/issues"
  },
  "_id": "compile-middleware@0.2.8",
  "dist": {
    "shasum": "9763cc1de00ca87e30f7ced072599e183b0f8746"
  },
  "_from": "compile-middleware@",
  "_resolved": "https://registry.npmjs.org/compile-middleware/-/compile-middleware-0.2.8.tgz"
}
